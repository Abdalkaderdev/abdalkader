[
  {
    "id": "ada-lovelace",
    "name": "Analytical Engine",
    "year": 1843,
    "creator": "Ada Lovelace",
    "paradigm": ["Imperative"],
    "predecessor": [],
    "successor": ["FORTRAN", "COBOL"],
    "helloWorld": "No executable code - conceptual algorithm",
    "historicalContext": "First conceptual programming language - never implemented but laid foundation for all future programming",
    "keyInnovations": ["First algorithm", "Concept of loops", "Conditional branching"],
    "description": "The first conceptual programming language, created by Ada Lovelace for Charles Babbage's Analytical Engine. While never implemented, it established fundamental programming concepts.",
    "era": "Pre-Computer Age",
    "color": "#8B4513"
  },
  {
    "id": "fortran",
    "name": "FORTRAN",
    "year": 1957,
    "creator": "John Backus (IBM)",
    "paradigm": ["Imperative", "Procedural"],
    "predecessor": ["Analytical Engine"],
    "successor": ["ALGOL", "COBOL"],
    "helloWorld": "PROGRAM HELLO\nWRITE(*,*) 'Hello, World!'\nEND PROGRAM HELLO",
    "historicalContext": "First high-level programming language, designed for scientific computing on IBM mainframes",
    "keyInnovations": ["High-level syntax", "Formula translation", "Compiler technology"],
    "description": "The first high-level programming language, revolutionizing scientific computing and establishing the foundation for modern programming languages.",
    "era": "Mainframe Era",
    "color": "#4169E1"
  },
  {
    "id": "cobol",
    "name": "COBOL",
    "year": 1959,
    "creator": "Grace Hopper & Committee",
    "paradigm": ["Imperative", "Procedural"],
    "predecessor": ["FORTRAN"],
    "successor": ["PL/I", "Pascal"],
    "helloWorld": "IDENTIFICATION DIVISION.\nPROGRAM-ID. HELLO.\nPROCEDURE DIVISION.\nDISPLAY 'Hello, World!'.\nSTOP RUN.",
    "historicalContext": "Designed for business applications, emphasizing readability and English-like syntax",
    "keyInnovations": ["English-like syntax", "Business data processing", "Portability"],
    "description": "The first business-oriented programming language, designed to be readable by non-programmers and handle large-scale data processing.",
    "era": "Mainframe Era",
    "color": "#32CD32"
  },
  {
    "id": "lisp",
    "name": "LISP",
    "year": 1958,
    "creator": "John McCarthy (MIT)",
    "paradigm": ["Functional", "Symbolic"],
    "predecessor": ["Analytical Engine"],
    "successor": ["Scheme", "Clojure", "Common Lisp"],
    "helloWorld": "(print \"Hello, World!\")",
    "historicalContext": "First functional programming language, designed for artificial intelligence research",
    "keyInnovations": ["Functional programming", "Symbolic computation", "Homoiconicity"],
    "description": "The first functional programming language, pioneering concepts that would influence modern languages and AI research.",
    "era": "AI Research Era",
    "color": "#FF6347"
  },
  {
    "id": "algol",
    "name": "ALGOL",
    "year": 1960,
    "creator": "International Committee",
    "paradigm": ["Imperative", "Procedural"],
    "predecessor": ["FORTRAN"],
    "successor": ["Pascal", "C", "Ada"],
    "helloWorld": "BEGIN\n  WRITE('Hello, World!');\nEND",
    "historicalContext": "First internationally standardized language, establishing many programming language concepts still used today",
    "keyInnovations": ["Block structure", "Recursion", "Type system", "International standard"],
    "description": "The first internationally standardized programming language, establishing fundamental concepts like block structure and recursion.",
    "era": "Standardization Era",
    "color": "#9370DB"
  },
  {
    "id": "c",
    "name": "C",
    "year": 1972,
    "creator": "Dennis Ritchie (Bell Labs)",
    "paradigm": ["Imperative", "Procedural"],
    "predecessor": ["ALGOL", "B"],
    "successor": ["C++", "C#", "Java", "Go", "Rust"],
    "helloWorld": "#include <stdio.h>\nint main() {\n    printf(\"Hello, World!\\n\");\n    return 0;\n}",
    "historicalContext": "Created for Unix operating system development, became the foundation for systems programming",
    "keyInnovations": ["Pointer arithmetic", "Memory management", "Portability", "Systems programming"],
    "description": "The most influential programming language in history, forming the foundation for operating systems and modern languages.",
    "era": "Unix Era",
    "color": "#0000FF"
  },
  {
    "id": "pascal",
    "name": "Pascal",
    "year": 1970,
    "creator": "Niklaus Wirth",
    "paradigm": ["Imperative", "Procedural"],
    "predecessor": ["ALGOL"],
    "successor": ["Modula", "Oberon", "Delphi"],
    "helloWorld": "program Hello;\nbegin\n  writeln('Hello, World!');\nend.",
    "historicalContext": "Designed for teaching programming, emphasizing structured programming principles",
    "keyInnovations": ["Structured programming", "Strong typing", "Educational design"],
    "description": "A language designed for teaching programming, emphasizing structured programming and strong typing principles.",
    "era": "Educational Era",
    "color": "#FFD700"
  },
  {
    "id": "smalltalk",
    "name": "Smalltalk",
    "year": 1972,
    "creator": "Alan Kay (Xerox PARC)",
    "paradigm": ["Object-Oriented"],
    "predecessor": ["Simula"],
    "successor": ["C++", "Java", "Python", "Ruby"],
    "helloWorld": "'Hello, World!' printNl",
    "historicalContext": "First pure object-oriented language, pioneering GUI and modern OOP concepts",
    "keyInnovations": ["Pure OOP", "Message passing", "Dynamic typing", "GUI development"],
    "description": "The first pure object-oriented programming language, pioneering concepts that would define modern software development.",
    "era": "Object-Oriented Revolution",
    "color": "#FF69B4"
  },
  {
    "id": "c-plus-plus",
    "name": "C++",
    "year": 1985,
    "creator": "Bjarne Stroustrup (Bell Labs)",
    "paradigm": ["Object-Oriented", "Imperative", "Procedural"],
    "predecessor": ["C", "Simula"],
    "successor": ["Java", "C#", "Rust"],
    "helloWorld": "#include <iostream>\nint main() {\n    std::cout << \"Hello, World!\" << std::endl;\n    return 0;\n}",
    "historicalContext": "Extension of C with object-oriented features, became the standard for systems and application programming",
    "keyInnovations": ["OOP in C", "Templates", "RAII", "STL"],
    "description": "The first widely adopted object-oriented language, extending C with classes and modern programming features.",
    "era": "Object-Oriented Era",
    "color": "#0066CC"
  },
  {
    "id": "perl",
    "name": "Perl",
    "year": 1987,
    "creator": "Larry Wall",
    "paradigm": ["Imperative", "Functional", "Object-Oriented"],
    "predecessor": ["C", "AWK", "sed"],
    "successor": ["Python", "Ruby", "PHP"],
    "helloWorld": "print \"Hello, World!\\n\";",
    "historicalContext": "Designed for text processing and system administration, became the 'duct tape of the internet'",
    "keyInnovations": ["Text processing", "Regular expressions", "Flexible syntax", "CGI programming"],
    "description": "The 'duct tape of the internet', revolutionizing text processing and web development in the early internet era.",
    "era": "Internet Era",
    "color": "#8B008B"
  },
  {
    "id": "python",
    "name": "Python",
    "year": 1991,
    "creator": "Guido van Rossum",
    "paradigm": ["Object-Oriented", "Imperative", "Functional"],
    "predecessor": ["ABC", "Modula-3"],
    "successor": ["Ruby", "Go", "Rust"],
    "helloWorld": "print(\"Hello, World!\")",
    "historicalContext": "Designed for readability and simplicity, became the most popular language for data science and AI",
    "keyInnovations": ["Readable syntax", "Indentation-based blocks", "Dynamic typing", "Extensive libraries"],
    "description": "A language designed for readability and simplicity, becoming the most popular language for data science and AI.",
    "era": "Modern Era",
    "color": "#3776AB"
  },
  {
    "id": "java",
    "name": "Java",
    "year": 1995,
    "creator": "James Gosling (Sun Microsystems)",
    "paradigm": ["Object-Oriented", "Imperative"],
    "predecessor": ["C++", "Smalltalk"],
    "successor": ["C#", "Kotlin", "Scala"],
    "helloWorld": "public class Hello {\n    public static void main(String[] args) {\n        System.out.println(\"Hello, World!\");\n    }\n}",
    "historicalContext": "Created for embedded systems, became the dominant language for enterprise and web applications",
    "keyInnovations": ["Write once, run anywhere", "Garbage collection", "Platform independence", "Enterprise features"],
    "description": "The language that revolutionized enterprise computing with 'write once, run anywhere' philosophy.",
    "era": "Enterprise Era",
    "color": "#F89820"
  },
  {
    "id": "javascript",
    "name": "JavaScript",
    "year": 1995,
    "creator": "Brendan Eich (Netscape)",
    "paradigm": ["Object-Oriented", "Functional", "Imperative"],
    "predecessor": ["Java", "Scheme", "Self"],
    "successor": ["TypeScript", "Dart", "WebAssembly"],
    "helloWorld": "console.log('Hello, World!');",
    "historicalContext": "Created in 10 days for web browsers, became the most widely used programming language",
    "keyInnovations": ["Client-side scripting", "Dynamic typing", "Prototype-based OOP", "Event-driven programming"],
    "description": "The language that made the web interactive, created in just 10 days and now powering the modern internet.",
    "era": "Web Era",
    "color": "#F7DF1E"
  },
  {
    "id": "php",
    "name": "PHP",
    "year": 1995,
    "creator": "Rasmus Lerdorf",
    "paradigm": ["Imperative", "Object-Oriented", "Functional"],
    "predecessor": ["C", "Perl"],
    "successor": ["Ruby", "Python"],
    "helloWorld": "<?php\necho \"Hello, World!\";\n?>",
    "historicalContext": "Created for personal home pages, became the backbone of early web development",
    "keyInnovations": ["Server-side scripting", "HTML embedding", "Database integration", "Web templating"],
    "description": "The language that powered the early web, making dynamic websites accessible to millions of developers.",
    "era": "Web Era",
    "color": "#777BB4"
  },
  {
    "id": "ruby",
    "name": "Ruby",
    "year": 1995,
    "creator": "Yukihiro Matsumoto",
    "paradigm": ["Object-Oriented", "Functional", "Imperative"],
    "predecessor": ["Smalltalk", "Perl", "Python"],
    "successor": ["Crystal", "Elixir"],
    "helloWorld": "puts \"Hello, World!\"",
    "historicalContext": "Designed for programmer happiness, became popular for web development with Rails framework",
    "keyInnovations": ["Programmer happiness", "Metaprogramming", "Blocks and closures", "Rails framework"],
    "description": "A language designed for programmer happiness, revolutionizing web development with the Rails framework.",
    "era": "Web Framework Era",
    "color": "#CC342D"
  },
  {
    "id": "c-sharp",
    "name": "C#",
    "year": 2000,
    "creator": "Microsoft",
    "paradigm": ["Object-Oriented", "Imperative", "Functional"],
    "predecessor": ["C++", "Java"],
    "successor": ["F#", "TypeScript"],
    "helloWorld": "using System;\nclass Program {\n    static void Main() {\n        Console.WriteLine(\"Hello, World!\");\n    }\n}",
    "historicalContext": "Microsoft's answer to Java, designed for the .NET platform and enterprise development",
    "keyInnovations": [".NET integration", "LINQ", "Properties", "Delegates"],
    "description": "Microsoft's modern object-oriented language, designed for the .NET platform and enterprise development.",
    "era": ".NET Era",
    "color": "#239120"
  },
  {
    "id": "go",
    "name": "Go",
    "year": 2009,
    "creator": "Google (Robert Griesemer, Rob Pike, Ken Thompson)",
    "paradigm": ["Imperative", "Procedural"],
    "predecessor": ["C", "Pascal", "Oberon"],
    "successor": ["Rust", "Zig"],
    "helloWorld": "package main\n\nimport \"fmt\"\n\nfunc main() {\n    fmt.Println(\"Hello, World!\")\n}",
    "historicalContext": "Created by Google to solve problems with C++ in large-scale systems, emphasizing simplicity and concurrency",
    "keyInnovations": ["Goroutines", "Channels", "Garbage collection", "Compiled performance"],
    "description": "Google's modern systems programming language, designed for simplicity, concurrency, and large-scale development.",
    "era": "Cloud Era",
    "color": "#00ADD8"
  },
  {
    "id": "rust",
    "name": "Rust",
    "year": 2010,
    "creator": "Mozilla (Graydon Hoare)",
    "paradigm": ["Imperative", "Functional", "Systems"],
    "predecessor": ["C", "C++", "Haskell"],
    "successor": ["Zig", "Carbon"],
    "helloWorld": "fn main() {\n    println!(\"Hello, World!\");\n}",
    "historicalContext": "Created to solve memory safety issues in systems programming while maintaining performance",
    "keyInnovations": ["Memory safety", "Zero-cost abstractions", "Ownership system", "Fearless concurrency"],
    "description": "The language that solves memory safety without garbage collection, revolutionizing systems programming.",
    "era": "Memory Safety Era",
    "color": "#DEA584"
  },
  {
    "id": "typescript",
    "name": "TypeScript",
    "year": 2012,
    "creator": "Microsoft (Anders Hejlsberg)",
    "paradigm": ["Object-Oriented", "Functional", "Imperative"],
    "predecessor": ["JavaScript", "C#"],
    "successor": ["Dart", "WebAssembly"],
    "helloWorld": "console.log('Hello, World!');",
    "historicalContext": "JavaScript with static typing, solving the scalability problems of large JavaScript applications",
    "keyInnovations": ["Static typing for JS", "Type inference", "Modern ES features", "Tooling support"],
    "description": "JavaScript with static typing, solving the scalability problems of large web applications.",
    "era": "Type Safety Era",
    "color": "#3178C6"
  },
  {
    "id": "swift",
    "name": "Swift",
    "year": 2014,
    "creator": "Apple",
    "paradigm": ["Object-Oriented", "Functional", "Imperative"],
    "predecessor": ["Objective-C", "Rust", "Haskell"],
    "successor": ["Kotlin"],
    "helloWorld": "print(\"Hello, World!\")",
    "historicalContext": "Apple's modern language for iOS development, replacing Objective-C with better safety and performance",
    "keyInnovations": ["Memory safety", "Optionals", "Protocols", "Value types"],
    "description": "Apple's modern language for iOS development, combining safety, performance, and developer experience.",
    "era": "Mobile Era",
    "color": "#FA7343"
  },
  {
    "id": "kotlin",
    "name": "Kotlin",
    "year": 2011,
    "creator": "JetBrains",
    "paradigm": ["Object-Oriented", "Functional", "Imperative"],
    "predecessor": ["Java", "Scala", "Groovy"],
    "successor": [],
    "helloWorld": "fun main() {\n    println(\"Hello, World!\")\n}",
    "historicalContext": "Designed to be a better Java, became the preferred language for Android development",
    "keyInnovations": ["Null safety", "Coroutines", "Interoperability with Java", "Concise syntax"],
    "description": "A modern language designed to be a better Java, now the preferred language for Android development.",
    "era": "Mobile Era",
    "color": "#7F52FF"
  }
]
