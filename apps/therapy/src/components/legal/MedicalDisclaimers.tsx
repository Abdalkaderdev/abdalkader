'use client';

import React, { useState } from 'react';
import { motion, AnimatePresence } from 'framer-motion';
import { AlertTriangle, Shield, FileText, Phone, ExternalLink } from 'lucide-react';
import { InteractiveButton } from '@/components/interactions/InteractiveButton';

interface MedicalDisclaimersProps {
  onAccept: () => void;
  onDecline: () => void;
  showFullDisclaimers?: boolean;
}

export const MedicalDisclaimers: React.FC<MedicalDisclaimersProps> = ({
  onAccept,
  onDecline,
  showFullDisclaimers = false
}) => {
  const [showFullText, setShowFullText] = useState(showFullDisclaimers);
  const [hasRead, setHasRead] = useState(false);

  const emergencyContacts = [
    { name: 'National Suicide Prevention Lifeline', number: '988', url: 'https://suicidepreventionlifeline.org' },
    { name: 'Crisis Text Line', number: 'Text HOME to 741741', url: 'https://crisistextline.org' },
    { name: 'Emergency Services', number: '911', url: null },
    { name: 'SAMHSA National Helpline', number: '1-800-662-4357', url: 'https://samhsa.gov' }
  ];

  const disclaimers = {
    aiLimitations: [
      'This AI therapist is not a replacement for professional mental health care',
      'AI responses are generated by machine learning models and may not always be accurate',
      'The AI cannot provide medical diagnosis or treatment recommendations',
      'AI responses should not be considered as professional medical advice'
    ],
    crisisSituations: [
      'If you are experiencing a mental health crisis, call 988 or 911 immediately',
      'This AI cannot provide emergency mental health services',
      'In crisis situations, seek immediate professional help',
      'Do not rely on AI responses during emergency situations'
    ],
    privacy: [
      'All conversations are encrypted and stored locally on your device',
      'No personal information is transmitted to external servers',
      'You have complete control over your data and can delete it at any time',
      'We do not collect, store, or share personal identifying information'
    ],
    professionalCare: [
      'This app is designed to supplement, not replace, professional mental health care',
      'Regular consultation with licensed mental health professionals is recommended',
      'If you have serious mental health concerns, seek professional help',
      'This app is not suitable for individuals with severe mental health conditions'
    ]
  };

  const handleAccept = () => {
    if (hasRead) {
      onAccept();
    }
  };

  const handleScroll = (e: React.UIEvent<HTMLDivElement>) => {
    const { scrollTop, scrollHeight, clientHeight } = e.currentTarget;
    const scrolled = scrollTop + clientHeight >= scrollHeight - 10;
    if (scrolled && !hasRead) {
      setHasRead(true);
    }
  };

  return (
    <div className="fixed inset-0 bg-black/80 backdrop-blur-sm z-50 flex items-center justify-center p-4">
      <motion.div
        initial={{ opacity: 0, scale: 0.9 }}
        animate={{ opacity: 1, scale: 1 }}
        className="bg-gray-900 rounded-lg max-w-4xl w-full max-h-[90vh] overflow-hidden border border-green-500/30"
      >
        {/* Header */}
        <div className="bg-green-500/20 border-b border-green-500/30 p-6">
          <div className="flex items-center gap-3">
            <Shield className="w-8 h-8 text-green-400" />
            <div>
              <h2 className="portfolio-hero-text text-white">Important Medical Disclaimers</h2>
              <p className="portfolio-base-text text-green-400">Please read and understand before using this app</p>
            </div>
          </div>
        </div>

        {/* Content */}
        <div 
          className="p-6 overflow-y-auto max-h-[60vh]"
          onScroll={handleScroll}
        >
          {/* Emergency Notice */}
          <div className="bg-red-500/20 border border-red-500/30 rounded-lg p-4 mb-6">
            <div className="flex items-center gap-3 mb-3">
              <AlertTriangle className="w-6 h-6 text-red-400" />
              <h3 className="portfolio-medium-text text-red-400 font-bold">EMERGENCY NOTICE</h3>
            </div>
            <p className="portfolio-base-text text-red-300 mb-4">
              If you are experiencing a mental health crisis or having thoughts of self-harm, 
              please call 988 or 911 immediately. This AI therapist cannot provide emergency services.
            </p>
            <div className="grid grid-cols-1 md:grid-cols-2 gap-3">
              {emergencyContacts.map((contact, index) => (
                <div key={index} className="bg-red-500/10 rounded p-3">
                  <div className="flex items-center gap-2">
                    <Phone className="w-4 h-4 text-red-400" />
                    <span className="portfolio-small-text text-red-300 font-medium">{contact.name}</span>
                  </div>
                  <p className="portfolio-small-text text-red-400 font-mono">{contact.number}</p>
                  {contact.url && (
                    <a 
                      href={contact.url} 
                      target="_blank" 
                      rel="noopener noreferrer"
                      className="text-xs text-red-300 hover:text-red-200 flex items-center gap-1 mt-1"
                    >
                      <ExternalLink className="w-3 h-3" />
                      Visit website
                    </a>
                  )}
                </div>
              ))}
            </div>
          </div>

          {/* AI Limitations */}
          <div className="mb-6">
            <h3 className="portfolio-medium-text text-white mb-3 flex items-center gap-2">
              <FileText className="w-5 h-5 text-green-400" />
              AI Limitations
            </h3>
            <ul className="space-y-2">
              {disclaimers.aiLimitations.map((item, index) => (
                <li key={index} className="portfolio-small-text text-gray-300 flex items-start gap-2">
                  <span className="text-green-400 mt-1">•</span>
                  {item}
                </li>
              ))}
            </ul>
          </div>

          {/* Crisis Situations */}
          <div className="mb-6">
            <h3 className="portfolio-medium-text text-white mb-3 flex items-center gap-2">
              <AlertTriangle className="w-5 h-5 text-orange-400" />
              Crisis Situations
            </h3>
            <ul className="space-y-2">
              {disclaimers.crisisSituations.map((item, index) => (
                <li key={index} className="portfolio-small-text text-gray-300 flex items-start gap-2">
                  <span className="text-orange-400 mt-1">•</span>
                  {item}
                </li>
              ))}
            </ul>
          </div>

          {/* Privacy */}
          <div className="mb-6">
            <h3 className="portfolio-medium-text text-white mb-3 flex items-center gap-2">
              <Shield className="w-5 h-5 text-blue-400" />
              Privacy & Data Protection
            </h3>
            <ul className="space-y-2">
              {disclaimers.privacy.map((item, index) => (
                <li key={index} className="portfolio-small-text text-gray-300 flex items-start gap-2">
                  <span className="text-blue-400 mt-1">•</span>
                  {item}
                </li>
              ))}
            </ul>
          </div>

          {/* Professional Care */}
          <div className="mb-6">
            <h3 className="portfolio-medium-text text-white mb-3 flex items-center gap-2">
              <FileText className="w-5 h-5 text-purple-400" />
              Professional Care
            </h3>
            <ul className="space-y-2">
              {disclaimers.professionalCare.map((item, index) => (
                <li key={index} className="portfolio-small-text text-gray-300 flex items-start gap-2">
                  <span className="text-purple-400 mt-1">•</span>
                  {item}
                </li>
              ))}
            </ul>
          </div>

          {/* Legal Notice */}
          <div className="bg-gray-800/50 rounded-lg p-4">
            <h3 className="portfolio-medium-text text-white mb-3">Legal Notice</h3>
            <p className="portfolio-small-text text-gray-300 mb-3">
              By using this application, you acknowledge that you have read, understood, and agree to these disclaimers. 
              This application is provided "as is" without warranty of any kind. The developers and providers of this 
              application are not responsible for any decisions made based on AI-generated responses.
            </p>
            <p className="portfolio-small-text text-gray-300">
              If you do not agree to these terms, please do not use this application and seek alternative mental health resources.
            </p>
          </div>
        </div>

        {/* Footer */}
        <div className="bg-gray-800/50 border-t border-gray-700 p-6">
          <div className="flex items-center justify-between">
            <div className="flex items-center gap-2">
              <input
                type="checkbox"
                id="readDisclaimers"
                checked={hasRead}
                onChange={(e) => setHasRead(e.target.checked)}
                className="w-4 h-4 text-green-500 bg-gray-700 border-gray-600 rounded focus:ring-green-500"
              />
              <label htmlFor="readDisclaimers" className="portfolio-small-text text-gray-300">
                I have read and understood the disclaimers above
              </label>
            </div>
            
            <div className="flex gap-3">
              <InteractiveButton
                onClick={onDecline}
                variant="ghost"
                disabled={false}
              >
                Decline
              </InteractiveButton>
              
              <InteractiveButton
                onClick={handleAccept}
                variant="primary"
                disabled={!hasRead}
              >
                Accept & Continue
              </InteractiveButton>
            </div>
          </div>
        </div>
      </motion.div>
    </div>
  );
};

export default MedicalDisclaimers;